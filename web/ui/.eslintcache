[{"/home/maycon-pacheco/Lab/circlerr/ui/src/index.tsx":"1","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Workspace/index.tsx":"2","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Project/ProjectForm.tsx":"3","/home/maycon-pacheco/Lab/circlerr/ui/src/core/api/cluster.ts":"4","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Workspace/Card.tsx":"5","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Workspace/List.tsx":"6","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Workspace/ClusterForm.tsx":"7","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Circle/Card.tsx":"8","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/CircleTree/helper.ts":"9","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/CircleTree/index.tsx":"10","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/CircleTree/Sidebar.tsx":"11","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/CircleTree/NodeSidebar.tsx":"12","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Project/index.tsx":"13","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Cluster/index.tsx":"14","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Dashboard/Sidebar.tsx":"15","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Circle/index.tsx":"16","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Main/Sidebar.tsx":"17","/home/maycon-pacheco/Lab/circlerr/ui/src/core/api/circle.ts":"18","/home/maycon-pacheco/Lab/circlerr/ui/src/core/api/api.ts":"19"},{"size":949,"mtime":1611921269483,"results":"20","hashOfConfig":"21"},{"size":1751,"mtime":1611921269487,"results":"22","hashOfConfig":"21"},{"size":1844,"mtime":1611921269487,"results":"23","hashOfConfig":"21"},{"size":529,"mtime":1611921269483,"results":"24","hashOfConfig":"21"},{"size":968,"mtime":1611928567324,"results":"25","hashOfConfig":"21"},{"size":1988,"mtime":1611941717610,"results":"26","hashOfConfig":"21"},{"size":1530,"mtime":1611928596103,"results":"27","hashOfConfig":"21"},{"size":855,"mtime":1611943146531,"results":"28","hashOfConfig":"21"},{"size":2712,"mtime":1611932041962,"results":"29","hashOfConfig":"21"},{"size":5246,"mtime":1611930281142,"results":"30","hashOfConfig":"21"},{"size":1708,"mtime":1611930878426,"results":"31","hashOfConfig":"21"},{"size":2370,"mtime":1611942920912,"results":"32","hashOfConfig":"21"},{"size":4170,"mtime":1611941623193,"results":"33","hashOfConfig":"21"},{"size":148,"mtime":1611921269487,"results":"34","hashOfConfig":"21"},{"size":841,"mtime":1611943354070,"results":"35","hashOfConfig":"21"},{"size":3361,"mtime":1611943264886,"results":"36","hashOfConfig":"21"},{"size":600,"mtime":1611943462111,"results":"37","hashOfConfig":"21"},{"size":2171,"mtime":1611921269483,"results":"38","hashOfConfig":"21"},{"size":99,"mtime":1611921269483,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1ni94e0",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/maycon-pacheco/Lab/circlerr/ui/src/index.tsx",["86"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Main from './modules/Main';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport Dashboard from './modules/Dashboard';\nimport { ROUTES_PREFIX } from './core/constants/routes';\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route path={ROUTES_PREFIX.dashboard} component={Dashboard} />\n        <Route path={ROUTES_PREFIX.main} component={Main} />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["87","88"],"/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Workspace/index.tsx",["89","90"],"import React, { useState } from 'react'\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { createWorkspace } from '../../core/api/workspace'\nimport WorkspaceForm from './WorkspaceForm';\nimport ClusterForm from './ClusterForm'\nimport List from './List'\nimport './style.scss'\nimport { createCluster } from '../../core/api/cluster';\nimport { Link, Route, useHistory, useParams } from 'react-router-dom';\n\nconst ModalCreateWorkspace = () => {\n  const history = useHistory()\n\n  const toggle = () => history.push('/workspaces')\n\n  const handleSubmit = (data: any) =>\n    createWorkspace(data)\n      .then(toggle)\n\n  return (\n    <Modal isOpen={true} toggle={toggle} className=\"\">\n      <ModalHeader toggle={toggle}>Create Workspace</ModalHeader>\n      <ModalBody>\n        <WorkspaceForm onSubmit={handleSubmit} />\n      </ModalBody>\n    </Modal>\n  )\n}\n\n\nconst ModalCreateCluster = () => {\n  const history = useHistory()\n  const { workspaceId } = useParams<any>()\n\n  const toggle = () => history.push('/workspaces')\n\n  const handleSubmit = (data: any) =>\n    createCluster(workspaceId, data)\n      .then(toggle)\n\n  return (\n    <Modal isOpen={true} toggle={toggle} className=\"\">\n      <ModalHeader toggle={toggle}>Create cluster</ModalHeader>\n      <ModalBody>\n        <ClusterForm onSubmit={handleSubmit} />\n      </ModalBody>\n    </Modal>\n  )\n}\n\nconst Workspace = () => {\n  return (\n    <div className=\"workspace\">\n      <div className=\"workspace__list\">\n        <Route path=\"/workspaces\" component={List} />\n        <Route path=\"/workspaces/create\" component={ModalCreateWorkspace} />\n        <Route path=\"/workspaces/:workspaceId/create-cluster\" component={ModalCreateCluster} />\n      </div>\n    </div >\n  )\n}\n\nexport default Workspace","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Project/ProjectForm.tsx",["91","92","93","94","95","96","97"],"/home/maycon-pacheco/Lab/circlerr/ui/src/core/api/cluster.ts",[],"/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Workspace/Card.tsx",["98","99","100","101","102","103","104","105"],"import { cluster, pointer } from 'd3'\nimport React from 'react'\nimport { Button, Card as ReactstrapCard, CardBody, CardSubtitle, CardTitle, ListGroup, ListGroupItem } from 'reactstrap'\nimport './style.scss'\n\nconst Card = ({ workspace, onClusterClick, onClusterCreate }: any) => {\n\n  return (\n    <div className=\"workspace__card\">\n      <div>{workspace?.name}</div>\n      <small>{workspace?.description}</small>\n\n      <div className=\"workspace__card__clusters\">\n        {workspace?.clusters?.map((cluster: any) => (\n          <div className=\"workspace__card__clusters__item\" onClick={() => onClusterClick(workspace?.id, cluster?.id)}>\n            <div>{cluster?.name}</div>\n            <small>{cluster?.address}</small>\n          </div>\n        ))}\n        {workspace?.clusters?.length <= 0 && (\n          <Button block color=\"primary\" onClick={() => onClusterCreate(workspace?.id)}>Create cluster</Button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Card","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Workspace/List.tsx",["106","107","108","109","110","111","112","113"],"/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Workspace/ClusterForm.tsx",["114","115","116","117","118"],"import React, { useEffect } from 'react'\nimport { useForm } from 'react-hook-form';\nimport { ModalFooter, Button, FormGroup, Input, Label } from 'reactstrap';\nimport './style.scss'\n\nconst Form = ({ onSubmit }: any) => {\n  const { register, handleSubmit, watch, errors } = useForm();\n  const onSubmitFunc = (data: any) => onSubmit({ ...data });\n\n  return (\n    <div className=\"workspace__form\">\n      <form onSubmit={handleSubmit(onSubmitFunc)}>\n        <FormGroup>\n          <input name=\"name\" id=\"name\" ref={register({ required: true })} className=\"form-control\" placeholder=\"Name\" />\n          {errors.name && <span>This field is required</span>}\n        </FormGroup>\n        <FormGroup>\n          <textarea name=\"description\" id=\"description\" ref={register} className=\"form-control\" placeholder=\"Description\"></textarea>\n        </FormGroup>\n        <FormGroup>\n          <input name=\"address\" id=\"address\" ref={register({ required: true })} className=\"form-control\" placeholder=\"Address\" />\n          <small className=\"text-white\">Example: http://localhost:8080</small>\n          {errors.address && <span>This field is required</span>}\n        </FormGroup>\n        <FormGroup>\n          <textarea name=\"app_key\" id=\"app_key\" ref={register({ required: true })} className=\"form-control\" placeholder=\"App key\"></textarea>\n          {errors.app_key && <span>This field is required</span>}\n        </FormGroup>\n\n        <Button type=\"submit\" color=\"primary\">Create</Button>{' '}\n      </form>\n    </div >\n  )\n}\n\nexport default Form","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Circle/Card.tsx",["119"],"/home/maycon-pacheco/Lab/circlerr/ui/src/modules/CircleTree/helper.ts",["120","121","122","123","124"],"import dagreD3 from 'dagre-d3'\nimport * as d3 from 'd3'\n\nexport const getColorByHealth = (health: any): any => {\n  if (health && health?.status) {\n    switch (health?.status) {\n      case 'Healthy':\n        return 'node-success'\n      case 'Degraded':\n        return 'node-danger'\n      case 'Progressing':\n        return 'node-progress'\n      default:\n        return ''\n    }\n  }\n\n  return ''\n}\n\nexport const getTree = (data: any, circleId: string) => {\n  let currentNodes: any = []\n  let currentEdges: any = []\n\n\n  let html = `<div class=\"node node-circle\">`;\n  html += `<div class=name>${circleId}</div>`;\n  html += `<div class=kind>Circle</span></div>`;\n  html += \"</div>\";\n  currentNodes = [...currentNodes, {\n    name: circleId,\n    labelType: 'html',\n    label: html,\n    padding: 0,\n    shape: 'rect',\n    meta: {\n      kind: 'Circle'\n    }\n  }]\n\n  data?.projects?.sort((a: any, b: any) => a.name?.localeCompare(b.name)).map((project: any) => {\n    var html = `<div class=\"node node-project\" >`;\n    html += `<div class=name>${project?.name}</div>`;\n    html += `<div class=kind>Project</span></div>`;\n    html += \"</div>\";\n    currentNodes = [...currentNodes, {\n      name: project?.name,\n      labelType: 'html',\n      label: html,\n      padding: 0,\n      shape: 'rect',\n      meta: {\n        kind: 'Project'\n      }\n    }]\n\n    currentEdges = [...currentEdges, {\n      source: circleId,\n      target: project?.name,\n      arrowhead: \"normal\"\n    }]\n\n\n    project?.resources?.map((res: any) => {\n      let html = `<div class=\"node ${getColorByHealth(res?.ref?.health)}\">`\n      html += `<div class=name>${res?.ref?.name}</siv>`;\n      html += `<div class=kind>${res?.ref?.kind}</span></div>`;\n      html += '</div>'\n\n      currentNodes = [...currentNodes, {\n        name: `${res?.ref?.kind}-${res?.ref?.name}`,\n        labelType: 'html',\n        label: html,\n        padding: 0,\n        shape: 'rect',\n        meta: {\n          name: res?.ref?.name,\n          kind: res?.ref?.kind,\n          version: res?.ref?.version,\n          group: res?.ref?.group,\n          health: res?.ref?.health,\n          creationTime: res?.ref?.creationTimestamp,\n        }\n      }]\n\n\n      if (!res?.parents) {\n        currentEdges = [...currentEdges, {\n          source: project?.name,\n          target: `${res?.ref?.kind}-${res?.ref?.name}`,\n          arrowhead: \"normal\"\n        }]\n\n      } else {\n        res?.parents?.map((parent: any) => {\n          currentEdges = [...currentEdges, {\n            source: `${parent?.kind}-${parent?.name}`,\n            target: `${res?.ref?.kind}-${res?.ref?.name}`,\n            arrowhead: \"normal\"\n          }]\n        })\n      }\n    })\n  })\n\n  return [currentNodes, currentEdges]\n}\n","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/CircleTree/index.tsx",["125","126","127","128","129","130","131"],"import React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport dagreD3 from 'dagre-d3'\nimport * as d3 from 'd3'\nimport { Route, useHistory, useLocation, useParams, useRouteMatch } from 'react-router-dom'\nimport { deploy, getCircle, getCircleTree, undeploy, removeProject, addProject } from '../../core/api/circle'\nimport './style.scss'\nimport { getTree } from './helper'\nimport NodeSidebar from './NodeSidebar'\nimport Sidebar from './Sidebar'\nimport { ROUTES_PREFIX } from '../../core/constants/routes'\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap'\nimport CircleReleaseForm from './CircleRelease'\nimport CircleProjectForm from './CircleProject'\n\nconst ModalDeploy = () => {\n  const history = useHistory()\n  const match = useRouteMatch()\n  const { workspaceId, clusterId, circleId } = useParams<any>()\n\n  const toggle = () => history.goBack()\n\n  const handleSubmit = (data: any) => {\n    deploy(workspaceId, clusterId, circleId, data)\n      .then(() => {\n        console.log('Circle CREATE SUCCESS')\n      })\n\n    toggle()\n  }\n\n  return (\n    <Modal isOpen={true} toggle={toggle} className=\"\" size=\"lg\">\n      <ModalHeader toggle={toggle}>Deploy in circle</ModalHeader>\n      <ModalBody>\n        <CircleReleaseForm onSubmit={handleSubmit} />\n      </ModalBody>\n    </Modal>\n  )\n}\n\nconst ModalProject = () => {\n  const history = useHistory()\n  const match = useRouteMatch()\n  const { workspaceId, clusterId, circleId } = useParams<any>()\n  const [projects, setProjects] = useState([])\n\n  const toggle = () => history.goBack()\n\n  useEffect(() => {\n    getCircle(workspaceId, clusterId, circleId)\n      .then((data: any) => setProjects(data?.release?.projects))\n  }, [])\n\n  const handleSubmit = (data: any) => {\n    addProject(workspaceId, clusterId, circleId, data)\n      .then(() => {\n        console.log('Circle CREATE SUCCESS')\n      })\n\n    toggle()\n  }\n\n  return (\n    <Modal isOpen={true} toggle={toggle} className=\"\" size=\"lg\">\n      <ModalHeader toggle={toggle}>Add project to release</ModalHeader>\n      <ModalBody>\n        <CircleProjectForm selectedProjects={projects} onSubmit={handleSubmit} />\n      </ModalBody>\n    </Modal>\n  )\n}\n\nconst Diagram = () => {\n  const [diagramData, setDiagramData] = useState<any>({ nodes: [], edges: [] })\n\n  const [selectedNode, setSelectedNode] = useState<any>()\n  const { workspaceId, clusterId, circleId } = useParams<any>()\n  const svg = useRef<any>()\n  const innerG = useRef<any>()\n\n  const requestCircleTree = () => getCircleTree(workspaceId, clusterId, circleId)\n    .then((data: any) => {\n      const [currentNodes, currentEdges] = getTree(data, circleId)\n      setDiagramData({ nodes: currentNodes, edges: currentEdges })\n    })\n\n  useLayoutEffect(() => {\n    requestCircleTree()\n    const interval = setInterval(() => requestCircleTree(), 3000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n\n  useEffect(() => {\n    let g = new dagreD3.graphlib.Graph().setGraph({\n      marginx: 350,\n      marginy: 15,\n      rankdir: \"LR\",\n      ranksep: 55,\n      nodesep: 15\n    })\n    let render = new dagreD3.render()\n    let innerSvg: any = d3.select(svg.current)\n    let inner: any = d3.select(innerG.current)\n    let zoom = d3.zoom().on('zoom', () => inner.attr('transform', (d3 as any)?.event.transform))\n    innerSvg.call(zoom)\n\n    diagramData?.nodes\n      ?.sort((a: any, b: any) => {\n        return a?.meta?.name?.localeCompare(b?.meta?.name) && a?.meta?.kind?.localeCompare(b?.meta?.kind)\n      })\n      ?.map((node: any) => {\n        g.setNode(node.name, { ...node })\n      })\n\n    diagramData?.edges\n      ?.sort((a: any, b: any) => {\n        return a.source.localeCompare(b.source) && a.target.localeCompare(b.target)\n      })\n      ?.map((edge: any) => {\n        g.setEdge(edge.source, edge.target, { ...edge })\n      })\n\n    render(inner, (g as any))\n\n    innerSvg.selectAll('g.node').on('click', (id: any) => {\n      setSelectedNode({ id, ...g.node(id) })\n    })\n  }, [diagramData])\n\n\n  return (\n    <>\n      <svg ref={svg}><g ref={innerG} /></svg>\n      {selectedNode && <NodeSidebar node={selectedNode} onClose={() => setSelectedNode(null)} />}\n    </>\n  )\n}\n\nconst Tree = () => {\n  const location = useLocation()\n  const [circle, setCircle] = useState(null)\n  const { workspaceId, clusterId, circleId } = useParams<any>()\n\n  const requestCircle = () => getCircle(workspaceId, clusterId, circleId)\n    .then(data => setCircle(data))\n\n  useEffect(() => {\n    requestCircle()\n  }, [location])\n\n  const handleUndeploy = () => undeploy(workspaceId, clusterId, circleId)\n    .then(() => requestCircle())\n\n  const handleRemoveProject = (projectName: string) => removeProject(workspaceId, clusterId, circleId, projectName)\n    .then(() => requestCircle())\n\n  return (\n    <div className=\"tree\">\n      {circle && <Sidebar circle={circle} onUndeploy={handleUndeploy} onRemoveProject={handleRemoveProject} />}\n      <Route path={`${ROUTES_PREFIX.dashboard}/circles/:circleId/tree`} component={Diagram} />\n      <Route path={`${ROUTES_PREFIX.dashboard}/circles/:circleId/tree/deploy`} component={ModalDeploy} />\n      <Route path={`${ROUTES_PREFIX.dashboard}/circles/:circleId/tree/add-project`} component={ModalProject} />\n    </div>\n  )\n}\n\nexport default Tree","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/CircleTree/Sidebar.tsx",["132"],"/home/maycon-pacheco/Lab/circlerr/ui/src/modules/CircleTree/NodeSidebar.tsx",["133","134","135","136","137","138","139","140"],"/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Project/index.tsx",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import React, { useEffect, useState } from 'react'\nimport { Link, Route, useHistory, useLocation, useParams, useRouteMatch } from 'react-router-dom'\nimport { Alert, Breadcrumb, BreadcrumbItem, Button, Card, CardBody, CardHeader, CardSubtitle, CardTitle, Col, Container, ListGroup, ListGroupItem, Modal, ModalBody, ModalHeader, Row, Table, UncontrolledCollapse } from 'reactstrap'\nimport { createProject, deleteProject, getProjects as getProjectsApi } from '../../core/api/project'\nimport { ROUTES_PREFIX } from '../../core/constants/routes'\nimport ProjectForm from './ProjectForm'\n\n\nconst ModalCreate = () => {\n  const history = useHistory()\n\n  const match = useRouteMatch()\n  const { workspaceId, clusterId } = useParams<any>()\n\n  const toggle = () => history.goBack()\n\n  const handleSubmit = (data: any) => {\n    createProject(workspaceId, clusterId, data)\n      .then(() => {\n        console.log('Project CREATE SUCCESS')\n      })\n    toggle()\n  }\n\n  return (\n    <Modal isOpen={true} toggle={toggle} className=\"\" size=\"lg\">\n      <ModalHeader toggle={toggle}>Create project</ModalHeader>\n      <ModalBody>\n        <ProjectForm onSubmit={handleSubmit} />\n      </ModalBody>\n    </Modal>\n  )\n}\n\nconst List = () => {\n  const match = useRouteMatch()\n  const history = useHistory()\n  const location = useLocation()\n  const { workspaceId, clusterId } = useParams<any>()\n  const [projects, setProjects] = useState([])\n\n  useEffect(() => {\n    getProjects()\n  }, [location])\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getProjects()\n    }, 3000)\n\n\n    return () => clearInterval(interval)\n  }, [])\n\n  const getProjects = () => getProjectsApi(workspaceId, clusterId)\n    .then(projects => setProjects(projects))\n\n  const handleDeleteProject = (circleid: string) => deleteProject(workspaceId, clusterId, circleid)\n    .then(() => getProjects())\n\n  return (\n    <div style={{ width: '90%', margin: '0 auto' }}>\n      <Row className=\"cluster__list__header\" style={{ marginTop: '50px', marginBottom: '40px' }}>\n        <Col xs=\"10\">\n          <h4 className=\"text-white\">Projects</h4>\n        </Col>\n        <Col xs=\"2\">\n          <Button color=\"primary\" block onClick={() => history.push(`${match.url}/create`)}>Create project</Button>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        {projects.map((project: any, i: any) => (\n          <Col xs=\"3\">\n            <Card className=\"mb-3\" style={{ padding: '10px', background: '#3A3A3C', color: '#fff' }}>\n              <Row>\n                <Col xs=\"10\">\n                  <div>{project?.name}</div>\n                  <div className=\"mb-2 text-muted\">{project?.repoUrl}/{project?.path}</div>\n                </Col>\n                <Col xs=\"2\" className=\"d-flex align-items-center\">\n                  <Button block color=\"link\" id={`toggler-${i}`} style={{ outline: 'none' }}>\n                    <i className=\"fas fa-project-diagram\"></i>\n                  </Button>\n                </Col>\n              </Row>\n              <UncontrolledCollapse toggler={`#toggler-${i}`}>\n                {project?.routes?.length <= 0 && (\n                  <div className=\"text-white p-3\">No routes for project</div>\n                )}\n                {project?.routes?.map((route: any) => (\n                  <Card\n                    style={{ background: ' #10AA80', padding: '5px', cursor: 'pointer' }}\n                    onClick={() => history.push(`/workspaces/${workspaceId}/clusters/${clusterId}/circles/${route?.circleName}/tree`)}\n                  >\n                    <div><strong>Circle:</strong> {route?.circleName}</div>\n                    <div><strong>Release:</strong> {route?.releaseName}</div>\n                  </Card>\n                ))}\n              </UncontrolledCollapse>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n\n    </div>\n  )\n}\n\nconst Project = () => {\n  const { workspaceId, clusterId } = useParams<any>()\n  return (\n    <div className=\"project\">\n      <Route path={`${ROUTES_PREFIX.dashboard}/projects`} component={List} />\n      <Route path={`${ROUTES_PREFIX.dashboard}/projects/create`} component={ModalCreate} />\n    </div>\n  )\n\n}\n\nexport default Project","/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Cluster/index.tsx",[],"/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Dashboard/Sidebar.tsx",["159"],"/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Circle/index.tsx",["160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182"],"/home/maycon-pacheco/Lab/circlerr/ui/src/modules/Main/Sidebar.tsx",["183","184"],"/home/maycon-pacheco/Lab/circlerr/ui/src/core/api/circle.ts",[],"/home/maycon-pacheco/Lab/circlerr/ui/src/core/api/api.ts",[],{"ruleId":"185","severity":1,"message":"186","line":7,"column":3,"nodeType":"187","messageId":"188","endLine":7,"endColumn":7},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"185","severity":1,"message":"193","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":25},{"ruleId":"185","severity":1,"message":"186","line":9,"column":10,"nodeType":"187","messageId":"188","endLine":9,"endColumn":14},{"ruleId":"185","severity":1,"message":"194","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"193","line":1,"column":28,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"195","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":23},{"ruleId":"185","severity":1,"message":"196","line":3,"column":18,"nodeType":"187","messageId":"188","endLine":3,"endColumn":21},{"ruleId":"185","severity":1,"message":"197","line":3,"column":41,"nodeType":"187","messageId":"188","endLine":3,"endColumn":44},{"ruleId":"185","severity":1,"message":"198","line":6,"column":35,"nodeType":"187","messageId":"188","endLine":6,"endColumn":40},{"ruleId":"185","severity":1,"message":"199","line":6,"column":50,"nodeType":"187","messageId":"188","endLine":6,"endColumn":57},{"ruleId":"185","severity":1,"message":"200","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":17},{"ruleId":"185","severity":1,"message":"201","line":1,"column":19,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"202","line":3,"column":26,"nodeType":"187","messageId":"188","endLine":3,"endColumn":40},{"ruleId":"185","severity":1,"message":"203","line":3,"column":42,"nodeType":"187","messageId":"188","endLine":3,"endColumn":50},{"ruleId":"185","severity":1,"message":"204","line":3,"column":52,"nodeType":"187","messageId":"188","endLine":3,"endColumn":64},{"ruleId":"185","severity":1,"message":"205","line":3,"column":66,"nodeType":"187","messageId":"188","endLine":3,"endColumn":75},{"ruleId":"185","severity":1,"message":"206","line":3,"column":77,"nodeType":"187","messageId":"188","endLine":3,"endColumn":86},{"ruleId":"185","severity":1,"message":"207","line":3,"column":88,"nodeType":"187","messageId":"188","endLine":3,"endColumn":101},{"ruleId":"185","severity":1,"message":"206","line":2,"column":18,"nodeType":"187","messageId":"188","endLine":2,"endColumn":27},{"ruleId":"185","severity":1,"message":"207","line":2,"column":29,"nodeType":"187","messageId":"188","endLine":2,"endColumn":42},{"ruleId":"185","severity":1,"message":"208","line":2,"column":44,"nodeType":"187","messageId":"188","endLine":2,"endColumn":64},{"ruleId":"185","severity":1,"message":"209","line":2,"column":66,"nodeType":"187","messageId":"188","endLine":2,"endColumn":83},{"ruleId":"185","severity":1,"message":"210","line":2,"column":95,"nodeType":"187","messageId":"188","endLine":2,"endColumn":104},{"ruleId":"185","severity":1,"message":"186","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":14},{"ruleId":"185","severity":1,"message":"211","line":21,"column":9,"nodeType":"187","messageId":"188","endLine":21,"endColumn":30},{"ruleId":"185","severity":1,"message":"212","line":24,"column":9,"nodeType":"187","messageId":"188","endLine":24,"endColumn":28},{"ruleId":"185","severity":1,"message":"194","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"213","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":21},{"ruleId":"185","severity":1,"message":"214","line":3,"column":42,"nodeType":"187","messageId":"188","endLine":3,"endColumn":47},{"ruleId":"185","severity":1,"message":"215","line":3,"column":49,"nodeType":"187","messageId":"188","endLine":3,"endColumn":54},{"ruleId":"185","severity":1,"message":"198","line":7,"column":35,"nodeType":"187","messageId":"188","endLine":7,"endColumn":40},{"ruleId":"185","severity":1,"message":"201","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":17},{"ruleId":"185","severity":1,"message":"216","line":1,"column":8,"nodeType":"187","messageId":"188","endLine":1,"endColumn":15},{"ruleId":"185","severity":1,"message":"217","line":2,"column":13,"nodeType":"187","messageId":"188","endLine":2,"endColumn":15},{"ruleId":"218","severity":1,"message":"219","line":41,"column":94,"nodeType":"220","messageId":"221","endLine":41,"endColumn":96},{"ruleId":"218","severity":1,"message":"219","line":64,"column":40,"nodeType":"220","messageId":"221","endLine":64,"endColumn":42},{"ruleId":"218","severity":1,"message":"219","line":95,"column":41,"nodeType":"220","messageId":"221","endLine":95,"endColumn":43},{"ruleId":"185","severity":1,"message":"222","line":17,"column":9,"nodeType":"187","messageId":"188","endLine":17,"endColumn":14},{"ruleId":"185","severity":1,"message":"222","line":43,"column":9,"nodeType":"187","messageId":"188","endLine":43,"endColumn":14},{"ruleId":"223","severity":1,"message":"224","line":52,"column":6,"nodeType":"225","endLine":52,"endColumn":8,"suggestions":"226"},{"ruleId":"223","severity":1,"message":"227","line":92,"column":6,"nodeType":"225","endLine":92,"endColumn":8,"suggestions":"228"},{"ruleId":"218","severity":1,"message":"219","line":113,"column":25,"nodeType":"220","messageId":"221","endLine":113,"endColumn":27},{"ruleId":"218","severity":1,"message":"219","line":121,"column":25,"nodeType":"220","messageId":"221","endLine":121,"endColumn":27},{"ruleId":"223","severity":1,"message":"229","line":151,"column":6,"nodeType":"225","endLine":151,"endColumn":16,"suggestions":"230"},{"ruleId":"185","severity":1,"message":"231","line":2,"column":22,"nodeType":"187","messageId":"188","endLine":2,"endColumn":31},{"ruleId":"185","severity":1,"message":"232","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":15},{"ruleId":"185","severity":1,"message":"203","line":3,"column":23,"nodeType":"187","messageId":"188","endLine":3,"endColumn":31},{"ruleId":"185","severity":1,"message":"233","line":3,"column":33,"nodeType":"187","messageId":"188","endLine":3,"endColumn":43},{"ruleId":"185","severity":1,"message":"234","line":3,"column":50,"nodeType":"187","messageId":"188","endLine":3,"endColumn":59},{"ruleId":"185","severity":1,"message":"235","line":7,"column":10,"nodeType":"187","messageId":"188","endLine":7,"endColumn":26},{"ruleId":"185","severity":1,"message":"236","line":15,"column":35,"nodeType":"187","messageId":"188","endLine":15,"endColumn":43},{"ruleId":"185","severity":1,"message":"237","line":16,"column":9,"nodeType":"187","messageId":"188","endLine":16,"endColumn":28},{"ruleId":"223","severity":1,"message":"238","line":28,"column":6,"nodeType":"225","endLine":28,"endColumn":12,"suggestions":"239"},{"ruleId":"185","severity":1,"message":"186","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"232","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":15},{"ruleId":"185","severity":1,"message":"240","line":3,"column":17,"nodeType":"187","messageId":"188","endLine":3,"endColumn":27},{"ruleId":"185","severity":1,"message":"241","line":3,"column":29,"nodeType":"187","messageId":"188","endLine":3,"endColumn":43},{"ruleId":"185","severity":1,"message":"203","line":3,"column":59,"nodeType":"187","messageId":"188","endLine":3,"endColumn":67},{"ruleId":"185","severity":1,"message":"233","line":3,"column":69,"nodeType":"187","messageId":"188","endLine":3,"endColumn":79},{"ruleId":"185","severity":1,"message":"204","line":3,"column":81,"nodeType":"187","messageId":"188","endLine":3,"endColumn":93},{"ruleId":"185","severity":1,"message":"205","line":3,"column":95,"nodeType":"187","messageId":"188","endLine":3,"endColumn":104},{"ruleId":"185","severity":1,"message":"210","line":3,"column":111,"nodeType":"187","messageId":"188","endLine":3,"endColumn":120},{"ruleId":"185","severity":1,"message":"206","line":3,"column":122,"nodeType":"187","messageId":"188","endLine":3,"endColumn":131},{"ruleId":"185","severity":1,"message":"207","line":3,"column":133,"nodeType":"187","messageId":"188","endLine":3,"endColumn":146},{"ruleId":"185","severity":1,"message":"242","line":3,"column":184,"nodeType":"187","messageId":"188","endLine":3,"endColumn":189},{"ruleId":"185","severity":1,"message":"222","line":12,"column":9,"nodeType":"187","messageId":"188","endLine":12,"endColumn":14},{"ruleId":"223","severity":1,"message":"243","line":44,"column":6,"nodeType":"225","endLine":44,"endColumn":16,"suggestions":"244"},{"ruleId":"223","severity":1,"message":"243","line":53,"column":6,"nodeType":"225","endLine":53,"endColumn":8,"suggestions":"245"},{"ruleId":"185","severity":1,"message":"246","line":58,"column":9,"nodeType":"187","messageId":"188","endLine":58,"endColumn":28},{"ruleId":"185","severity":1,"message":"247","line":111,"column":11,"nodeType":"187","messageId":"188","endLine":111,"endColumn":22},{"ruleId":"185","severity":1,"message":"248","line":111,"column":24,"nodeType":"187","messageId":"188","endLine":111,"endColumn":33},{"ruleId":"185","severity":1,"message":"249","line":8,"column":9,"nodeType":"187","messageId":"188","endLine":8,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"232","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":15},{"ruleId":"185","severity":1,"message":"250","line":3,"column":17,"nodeType":"187","messageId":"188","endLine":3,"endColumn":22},{"ruleId":"185","severity":1,"message":"240","line":3,"column":24,"nodeType":"187","messageId":"188","endLine":3,"endColumn":34},{"ruleId":"185","severity":1,"message":"241","line":3,"column":36,"nodeType":"187","messageId":"188","endLine":3,"endColumn":50},{"ruleId":"185","severity":1,"message":"203","line":3,"column":60,"nodeType":"187","messageId":"188","endLine":3,"endColumn":68},{"ruleId":"185","severity":1,"message":"233","line":3,"column":70,"nodeType":"187","messageId":"188","endLine":3,"endColumn":80},{"ruleId":"185","severity":1,"message":"205","line":3,"column":82,"nodeType":"187","messageId":"188","endLine":3,"endColumn":91},{"ruleId":"185","severity":1,"message":"210","line":3,"column":98,"nodeType":"187","messageId":"188","endLine":3,"endColumn":107},{"ruleId":"185","severity":1,"message":"206","line":3,"column":109,"nodeType":"187","messageId":"188","endLine":3,"endColumn":118},{"ruleId":"185","severity":1,"message":"207","line":3,"column":120,"nodeType":"187","messageId":"188","endLine":3,"endColumn":133},{"ruleId":"185","severity":1,"message":"251","line":4,"column":38,"nodeType":"187","messageId":"188","endLine":4,"endColumn":44},{"ruleId":"185","severity":1,"message":"252","line":4,"column":46,"nodeType":"187","messageId":"188","endLine":4,"endColumn":55},{"ruleId":"185","severity":1,"message":"253","line":4,"column":86,"nodeType":"187","messageId":"188","endLine":4,"endColumn":94},{"ruleId":"185","severity":1,"message":"222","line":12,"column":9,"nodeType":"187","messageId":"188","endLine":12,"endColumn":14},{"ruleId":"185","severity":1,"message":"254","line":43,"column":10,"nodeType":"187","messageId":"188","endLine":43,"endColumn":15},{"ruleId":"223","severity":1,"message":"255","line":47,"column":6,"nodeType":"225","endLine":47,"endColumn":16,"suggestions":"256"},{"ruleId":"223","severity":1,"message":"255","line":55,"column":6,"nodeType":"225","endLine":55,"endColumn":8,"suggestions":"257"},{"ruleId":"185","severity":1,"message":"258","line":64,"column":9,"nodeType":"187","messageId":"188","endLine":64,"endColumn":27},{"ruleId":"185","severity":1,"message":"259","line":71,"column":9,"nodeType":"187","messageId":"188","endLine":71,"endColumn":25},{"ruleId":"185","severity":1,"message":"247","line":107,"column":11,"nodeType":"187","messageId":"188","endLine":107,"endColumn":22},{"ruleId":"185","severity":1,"message":"248","line":107,"column":24,"nodeType":"187","messageId":"188","endLine":107,"endColumn":33},{"ruleId":"185","severity":1,"message":"222","line":108,"column":9,"nodeType":"187","messageId":"188","endLine":108,"endColumn":14},{"ruleId":"185","severity":1,"message":"222","line":7,"column":9,"nodeType":"187","messageId":"188","endLine":7,"endColumn":14},{"ruleId":"185","severity":1,"message":"249","line":8,"column":9,"nodeType":"187","messageId":"188","endLine":8,"endColumn":17},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["260"],"no-negated-in-lhs",["261"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useFieldArray' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'watch' is assigned a value but never used.","'control' is assigned a value but never used.","'cluster' is defined but never used.","'pointer' is defined but never used.","'ReactstrapCard' is defined but never used.","'CardBody' is defined but never used.","'CardSubtitle' is defined but never used.","'CardTitle' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'ListGroupItemHeading' is defined but never used.","'ListGroupItemText' is defined but never used.","'Container' is defined but never used.","'handleDeleteWorkspace' is assigned a value but never used.","'handleDeleteCluster' is assigned a value but never used.","'ModalFooter' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","'dagreD3' is defined but never used.","'d3' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'match' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'circleId', 'clusterId', and 'workspaceId'. Either include them or remove the dependency array.","ArrayExpression",["262"],"React Hook useLayoutEffect has a missing dependency: 'requestCircleTree'. Either include it or remove the dependency array.",["263"],"React Hook useEffect has a missing dependency: 'requestCircle'. Either include it or remove the dependency array.",["264"],"'useParams' is defined but never used.","'Alert' is defined but never used.","'CardHeader' is defined but never used.","'Jumbotron' is defined but never used.","'getColorByHealth' is defined but never used.","'circleId' is assigned a value but never used.","'getHealthColor' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clusterId' and 'workspaceId'. Either include them or remove the dependency array.",["265"],"'Breadcrumb' is defined but never used.","'BreadcrumbItem' is defined but never used.","'Table' is defined but never used.","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.",["266"],["267"],"'handleDeleteProject' is assigned a value but never used.","'workspaceId' is assigned a value but never used.","'clusterId' is assigned a value but never used.","'location' is assigned a value but never used.","'Badge' is defined but never used.","'deploy' is defined but never used.","'getCircle' is defined but never used.","'undeploy' is defined but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCircles'. Either include it or remove the dependency array.",["268"],["269"],"'handleDeleteCircle' is assigned a value but never used.","'getColorByStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"270","fix":"271"},{"desc":"272","fix":"273"},{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},"Update the dependencies array to be: [circleId, clusterId, workspaceId]",{"range":"286","text":"287"},"Update the dependencies array to be: [requestCircleTree]",{"range":"288","text":"289"},"Update the dependencies array to be: [location, requestCircle]",{"range":"290","text":"291"},"Update the dependencies array to be: [clusterId, node, workspaceId]",{"range":"292","text":"293"},"Update the dependencies array to be: [getProjects, location]",{"range":"294","text":"295"},"Update the dependencies array to be: [getProjects]",{"range":"296","text":"297"},"Update the dependencies array to be: [getCircles, location]",{"range":"298","text":"299"},"Update the dependencies array to be: [getCircles]",{"range":"300","text":"301"},[1696,1698],"[circleId, clusterId, workspaceId]",[2877,2879],"[requestCircleTree]",[4475,4485],"[location, requestCircle]",[999,1005],"[clusterId, node, workspaceId]",[1459,1469],"[getProjects, location]",[1614,1616],"[getProjects]",[1502,1512],"[getCircles, location]",[1655,1657],"[getCircles]"]